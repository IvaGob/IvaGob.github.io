{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{getAuth,onAuthStateChanged}from\"firebase/auth\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserProfile=()=>{const[user,setUser]=useState(null);const[formData,setFormData]=useState({firstName:\"\",lastName:\"\",phone:\"\"});const[orderedTours,setOrderedTours]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const auth=getAuth();useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async firebaseUser=>{if(firebaseUser){try{// Отримати токен\nconst token=await firebaseUser.getIdToken();// Отримати дані користувача через токен\nconst currentUserRes=await fetch(\"/api/currentUser\",{method:\"GET\",headers:{Authorization:`Bearer ${token}`}});if(!currentUserRes.ok){throw new Error(\"Помилка при перевірці токена.\");}const currentUserData=await currentUserRes.json();const userEmail=currentUserData.email;// Отримати профіль користувача через email (передати токен!)\nconst userResponse=await fetch(`/api/user/${userEmail}`,{headers:{Authorization:`Bearer ${token}`}});if(!userResponse.ok){throw new Error(\"Помилка при отриманні профілю користувача.\");}const userData=await userResponse.json();setUser(firebaseUser);setFormData({firstName:userData.firstName||\"\",lastName:userData.lastName||\"\",phone:userData.phone||\"\"});setOrderedTours(userData.orderedTours||[]);}catch(err){console.error(\"Помилка при отриманні даних користувача:\",err);setError(err.message);}}else{setUser(null);}setLoading(false);});return()=>unsubscribe();},[auth]);const handleChange=e=>{setFormData(prev=>({...prev,[e.target.name]:e.target.value}));};const handleSave=async()=>{if(!user)return;try{const token=await user.getIdToken();const response=await fetch(\"/api/user/order\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`},body:JSON.stringify({email:user.email,name:formData.firstName,surname:formData.lastName,phone:formData.phone})});if(!response.ok){throw new Error(\"Помилка збереження даних.\");}alert(\"Дані успішно оновлено!\");}catch(error){console.error(\"Помилка при оновленні даних:\",error);alert(\"Помилка збереження даних.\");}};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\"});if(!user)return/*#__PURE__*/_jsx(\"div\",{children:\"\\u0411\\u0443\\u0434\\u044C \\u043B\\u0430\\u0441\\u043A\\u0430, \\u0443\\u0432\\u0456\\u0439\\u0434\\u0456\\u0442\\u044C \\u0443 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443.\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u041F\\u0440\\u043E\\u0444\\u0456\\u043B\\u044C \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u0406\\u043C\\u2019\\u044F:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"firstName\",value:formData.firstName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"lastName\",value:formData.lastName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone\",value:formData.phone,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,children:\"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041C\\u043E\\u0457 \\u0437\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u044F\"}),orderedTours.length>0?/*#__PURE__*/_jsx(\"ul\",{children:orderedTours.map((tour,index)=>/*#__PURE__*/_jsx(\"li\",{children:tour},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u043C\\u0430\\u0454 \\u0437\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0445 \\u0442\\u0443\\u0440\\u0456\\u0432.\"}),error&&/*#__PURE__*/_jsx(\"div\",{children:error})]});};export default UserProfile;","map":{"version":3,"names":["React","useEffect","useState","getAuth","onAuthStateChanged","jsx","_jsx","jsxs","_jsxs","UserProfile","user","setUser","formData","setFormData","firstName","lastName","phone","orderedTours","setOrderedTours","loading","setLoading","error","setError","auth","unsubscribe","firebaseUser","token","getIdToken","currentUserRes","fetch","method","headers","Authorization","ok","Error","currentUserData","json","userEmail","email","userResponse","userData","err","console","message","handleChange","e","prev","target","name","value","handleSave","response","body","JSON","stringify","surname","alert","children","className","type","onChange","onClick","length","map","tour","index"],"sources":["C:/Users/dacko/my-react-app/src/pages/profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst UserProfile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n  });\r\n  const [orderedTours, setOrderedTours] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const auth = getAuth();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\r\n      if (firebaseUser) {\r\n        try {\r\n          // Отримати токен\r\n          const token = await firebaseUser.getIdToken();\r\n\r\n          // Отримати дані користувача через токен\r\n          const currentUserRes = await fetch(\"/api/currentUser\", {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (!currentUserRes.ok) {\r\n            throw new Error(\"Помилка при перевірці токена.\");\r\n          }\r\n\r\n          const currentUserData = await currentUserRes.json();\r\n          const userEmail = currentUserData.email;\r\n\r\n          // Отримати профіль користувача через email (передати токен!)\r\n          const userResponse = await fetch(`/api/user/${userEmail}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (!userResponse.ok) {\r\n            throw new Error(\"Помилка при отриманні профілю користувача.\");\r\n          }\r\n\r\n          const userData = await userResponse.json();\r\n\r\n          setUser(firebaseUser);\r\n          setFormData({\r\n            firstName: userData.firstName || \"\",\r\n            lastName: userData.lastName || \"\",\r\n            phone: userData.phone || \"\",\r\n          });\r\n\r\n          setOrderedTours(userData.orderedTours || []);\r\n        } catch (err) {\r\n          console.error(\"Помилка при отриманні даних користувача:\", err);\r\n          setError(err.message);\r\n        }\r\n      } else {\r\n        setUser(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [auth]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!user) return;\r\n    try {\r\n      const token = await user.getIdToken();\r\n\r\n      const response = await fetch(\"/api/user/order\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          email: user.email,\r\n          name: formData.firstName,\r\n          surname: formData.lastName,\r\n          phone: formData.phone,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Помилка збереження даних.\");\r\n      }\r\n\r\n      alert(\"Дані успішно оновлено!\");\r\n    } catch (error) {\r\n      console.error(\"Помилка при оновленні даних:\", error);\r\n      alert(\"Помилка збереження даних.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Завантаження...</div>;\r\n  if (!user) return <div>Будь ласка, увійдіть у систему.</div>;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h1>Профіль користувача</h1>\r\n      <label>\r\n        Ім’я:\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={formData.firstName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Прізвище:\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={formData.lastName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Телефон:\r\n        <input\r\n          type=\"text\"\r\n          name=\"phone\"\r\n          value={formData.phone}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button onClick={handleSave}>Зберегти</button>\r\n\r\n      <h2>Мої замовлення</h2>\r\n      {orderedTours.length > 0 ? (\r\n        <ul>\r\n          {orderedTours.map((tour, index) => (\r\n            <li key={index}>{tour}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>У вас немає замовлених турів.</p>\r\n      )}\r\n\r\n      {error && <div>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}