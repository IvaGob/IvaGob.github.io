{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dacko\\\\my-react-app\\\\src\\\\pages\\\\userpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CardWithMap from \"../components/CardWithMap\";\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js\";\nimport { getFirestore, collection, getDocs, deleteDoc, doc, getDoc } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js\";\nimport { getAuth, onAuthStateChanged } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB1JR1fYBr3xUDCEJSE67FF8D2gRlSdPcY\",\n  authDomain: \"hot-tours-39775.firebaseapp.com\",\n  projectId: \"hot-tours-39775\",\n  storageBucket: \"hot-tours-39775.firebasestorage.app\",\n  messagingSenderId: \"299242912883\",\n  appId: \"1:299242912883:web:e2f4207f55e72b165f7e06\",\n  measurementId: \"G-TKWTBWYCZZ\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst UserPage = () => {\n  _s();\n  const [orderedTours, setOrderedTours] = useState([]);\n  const [user, setUser] = useState(null);\n  const [userName, setUserName] = useState(\"\"); // <-- новий стан для імені\n\n  // Відстеження входу користувача\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, firebaseUser => {\n      if (firebaseUser) {\n        setUser(firebaseUser);\n        loadUserName(firebaseUser.email);\n        loadOrderedTours(firebaseUser.email);\n      } else {\n        setUser(null);\n        setUserName(\"\");\n        setOrderedTours([]);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Завантажити ім’я користувача з Firestore\n  const loadUserName = async userEmail => {\n    try {\n      const userDocRef = doc(db, \"users\", userEmail);\n      const userDocSnap = await getDoc(userDocRef);\n      if (userDocSnap.exists()) {\n        const userData = userDocSnap.data();\n        if (userData.name) {\n          setUserName(userData.name);\n        }\n      }\n    } catch (error) {\n      console.error(\"Помилка завантаження імені користувача:\", error);\n    }\n  };\n\n  // Завантажити замовлені тури\n  const loadOrderedTours = async userEmail => {\n    try {\n      const orderedRef = collection(db, \"users\", userEmail, \"orderedTours\");\n      const querySnapshot = await getDocs(orderedRef);\n      const orderedIDs = querySnapshot.docs.map(doc => doc.data().tourId);\n      const filtered = tourData.filter(tour => orderedIDs.includes(tour.id));\n      setOrderedTours(filtered);\n    } catch (error) {\n      console.error(\"Помилка завантаження замовлених турів:\", error);\n    }\n  };\n\n  // Видалення туру з замовлень\n  const handleRemoveTour = async idToRemove => {\n    if (!user) return;\n    try {\n      const orderedRef = collection(db, \"users\", user.email, \"orderedTours\");\n      const querySnapshot = await getDocs(orderedRef);\n      const docToDelete = querySnapshot.docs.find(docSnap => docSnap.data().tourId === idToRemove);\n      if (docToDelete) {\n        await deleteDoc(doc(db, \"users\", user.email, \"ordered\", docToDelete.id));\n        loadOrderedTours(user.email);\n      }\n    } catch (error) {\n      console.error(\"Помилка видалення туру:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userName ? `${userName}, ось ваші тури` : \"Ваші тури\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), orderedTours.length > 0 ? orderedTours.map((tour, index) => /*#__PURE__*/_jsxDEV(CardWithMap, {\n      tour: tour,\n      index: index,\n      onRemove: handleRemoveTour\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"own-tour-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"img/noTours.png\",\n        alt: \"\\u043D\\u0435\\u043C\\u0430\\u0454 \\u043D\\u0456\\u0447\\u043E\\u0433\\u043E\",\n        className: \"no-tour-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0438 \\u0449\\u0435 \\u043D\\u0435 \\u0434\\u043E\\u0434\\u0430\\u043B\\u0438 \\u0436\\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u0442\\u0443\\u0440\\u0443!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPage, \"5JuqEib3VxMUxqZY07VBUuRUdGs=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","CardWithMap","initializeApp","getFirestore","collection","getDocs","deleteDoc","doc","getDoc","getAuth","onAuthStateChanged","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","auth","UserPage","_s","orderedTours","setOrderedTours","user","setUser","userName","setUserName","unsubscribe","firebaseUser","loadUserName","email","loadOrderedTours","userEmail","userDocRef","userDocSnap","exists","userData","data","name","error","console","orderedRef","querySnapshot","orderedIDs","docs","map","tourId","filtered","tourData","filter","tour","includes","id","handleRemoveTour","idToRemove","docToDelete","find","docSnap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","onRemove","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/dacko/my-react-app/src/pages/userpage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CardWithMap from \"../components/CardWithMap\";\r\n\r\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js\";\r\nimport { getFirestore, collection, getDocs, deleteDoc, doc, getDoc } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js\";\r\nimport { getAuth, onAuthStateChanged } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB1JR1fYBr3xUDCEJSE67FF8D2gRlSdPcY\",\r\n    authDomain: \"hot-tours-39775.firebaseapp.com\",\r\n    projectId: \"hot-tours-39775\",\r\n    storageBucket: \"hot-tours-39775.firebasestorage.app\",\r\n    messagingSenderId: \"299242912883\",\r\n    appId: \"1:299242912883:web:e2f4207f55e72b165f7e06\",\r\n    measurementId: \"G-TKWTBWYCZZ\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nconst UserPage = () => {\r\n    const [orderedTours, setOrderedTours] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [userName, setUserName] = useState(\"\"); // <-- новий стан для імені\r\n  \r\n    // Відстеження входу користувача\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n            if (firebaseUser) {\r\n                setUser(firebaseUser);\r\n                loadUserName(firebaseUser.email);\r\n                loadOrderedTours(firebaseUser.email);\r\n            } else {\r\n                setUser(null);\r\n                setUserName(\"\");\r\n                setOrderedTours([]);\r\n            }\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    // Завантажити ім’я користувача з Firestore\r\n    const loadUserName = async (userEmail) => {\r\n        try {\r\n            const userDocRef = doc(db, \"users\", userEmail);\r\n            const userDocSnap = await getDoc(userDocRef);\r\n            if (userDocSnap.exists()) {\r\n                const userData = userDocSnap.data();\r\n            if (userData.name) {\r\n                setUserName(userData.name);\r\n            }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Помилка завантаження імені користувача:\", error);\r\n        }\r\n    };\r\n\r\n    // Завантажити замовлені тури\r\n    const loadOrderedTours = async (userEmail) => {\r\n      try {\r\n        const orderedRef = collection(db, \"users\", userEmail, \"orderedTours\");\r\n        const querySnapshot = await getDocs(orderedRef);\r\n        const orderedIDs = querySnapshot.docs.map((doc) => doc.data().tourId);\r\n  \r\n        const filtered = tourData.filter((tour) => orderedIDs.includes(tour.id));\r\n        setOrderedTours(filtered);\r\n      } catch (error) {\r\n        console.error(\"Помилка завантаження замовлених турів:\", error);\r\n      }\r\n    };\r\n  \r\n    // Видалення туру з замовлень\r\n    const handleRemoveTour = async (idToRemove) => {\r\n        if (!user) return;\r\n        try {\r\n            const orderedRef = collection(db, \"users\", user.email, \"orderedTours\");\r\n            const querySnapshot = await getDocs(orderedRef);\r\n    \r\n            const docToDelete = querySnapshot.docs.find((docSnap) => docSnap.data().tourId === idToRemove);\r\n            if (docToDelete) {\r\n                await deleteDoc(doc(db, \"users\", user.email, \"ordered\", docToDelete.id));\r\n                loadOrderedTours(user.email);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Помилка видалення туру:\", error);\r\n        }\r\n    };\r\n  \r\n    return (\r\n        <div className=\"user-page\">\r\n            <h1>{userName ? `${userName}, ось ваші тури` : \"Ваші тури\"}</h1>\r\n    \r\n            {orderedTours.length > 0 ? (\r\n            orderedTours.map((tour, index) => (\r\n                <CardWithMap key={index} tour={tour} index={index} onRemove={handleRemoveTour} />\r\n            ))\r\n            ) : (\r\n            <div className=\"own-tour-div\">\r\n                <img src=\"img/noTours.png\" alt=\"немає нічого\" className=\"no-tour-img\" />\r\n                <h2>Ви ще не додали жодного туру!</h2>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}