{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import CardWithMap from\"../components/CardWithMap\";import{initializeApp}from\"https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js\";import{getFirestore,collection,getDocs,updateDoc,arrayRemove,doc,getDoc}from\"https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js\";import{getAuth,onAuthStateChanged}from\"https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const firebaseConfig={apiKey:\"AIzaSyB1JR1fYBr3xUDCEJSE67FF8D2gRlSdPcY\",authDomain:\"hot-tours-39775.firebaseapp.com\",projectId:\"hot-tours-39775\",storageBucket:\"hot-tours-39775.firebasestorage.app\",messagingSenderId:\"299242912883\",appId:\"1:299242912883:web:e2f4207f55e72b165f7e06\",measurementId:\"G-TKWTBWYCZZ\"};const app=initializeApp(firebaseConfig);const db=getFirestore(app);const auth=getAuth(app);const UserPage=()=>{const[orderedTours,setOrderedTours]=useState([]);const[user,setUser]=useState(null);const[userName,setUserName]=useState(\"\");// <-- новий стан для імені\n// Відстеження входу користувача\nuseEffect(()=>{const unsubscribe=onAuthStateChanged(auth,firebaseUser=>{if(firebaseUser){setUser(firebaseUser);loadUserName(firebaseUser.email);loadOrderedTours(firebaseUser.email);}else{setUser(null);setUserName(\"\");setOrderedTours([]);}});return()=>unsubscribe();},[]);// Завантажити ім’я користувача з Firestore\nconst loadUserName=async userEmail=>{try{const userDocRef=doc(db,\"users\",userEmail);const userDocSnap=await getDoc(userDocRef);if(userDocSnap.exists()){const userData=userDocSnap.data();if(userData.name){setUserName(userData.name);}}}catch(error){console.error(\"Помилка завантаження імені користувача:\",error);}};// Завантажити замовлені тури\nconst loadOrderedTours=async userEmail=>{try{const userDocRef=doc(db,\"users\",userEmail);const userDocSnap=await getDoc(userDocRef);if(!userDocSnap.exists()){console.error(\"Користувача не знайдено\");return;}const userData=userDocSnap.data();const orderedIDs=userData.orderedTours||[];// Отримати всі замовлені тури\nconst toursWithPlaces=await Promise.all(orderedIDs.map(async tourId=>{const tourDocRef=doc(db,\"tours\",tourId);const tourSnap=await getDoc(tourDocRef);if(!tourSnap.exists())return null;const tourData={id:tourSnap.id,...tourSnap.data()};// Завантаження підколекції places\nconst placesSnap=await getDocs(collection(db,\"tours\",tourId,\"places\"));tourData.places=placesSnap.docs.map(doc=>doc.data());return tourData;}));// Фільтруємо null (якщо якийсь тур не існує)\nconst filtered=toursWithPlaces.filter(t=>t!==null);setOrderedTours(filtered);}catch(error){console.error(\"Помилка завантаження замовлених турів:\",error);}};// Видалення туру з замовлень\nconst handleRemoveTour=async idToRemove=>{if(!user)return;try{const userRef=doc(db,\"users\",user.email);// Видалити tourId з масиву orderedTours\nawait updateDoc(userRef,{orderedTours:arrayRemove(idToRemove)});// Повторно завантажити оновлені тури\nloadOrderedTours(user.email);console.log(\"Натиснуто на видалення туру з id:\",idToRemove);}catch(error){console.error(\"Помилка видалення туру:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:userName?`${userName}, ось ваші тури`:\"Ваші тури\"}),orderedTours.length>0?orderedTours.map((tour,index)=>/*#__PURE__*/_jsx(CardWithMap,{tour:tour,index:index,onRemove:handleRemoveTour,user:user},index)):/*#__PURE__*/_jsxs(\"div\",{className:\"own-tour-div\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"img/noTours.png\",alt:\"\\u043D\\u0435\\u043C\\u0430\\u0454 \\u043D\\u0456\\u0447\\u043E\\u0433\\u043E\",className:\"no-tour-img\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0412\\u0438 \\u0449\\u0435 \\u043D\\u0435 \\u0434\\u043E\\u0434\\u0430\\u043B\\u0438 \\u0436\\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u0442\\u0443\\u0440\\u0443!\"})]})]});};export default UserPage;","map":{"version":3,"names":["React","useEffect","useState","CardWithMap","initializeApp","getFirestore","collection","getDocs","updateDoc","arrayRemove","doc","getDoc","getAuth","onAuthStateChanged","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","auth","UserPage","orderedTours","setOrderedTours","user","setUser","userName","setUserName","unsubscribe","firebaseUser","loadUserName","email","loadOrderedTours","userEmail","userDocRef","userDocSnap","exists","userData","data","name","error","console","orderedIDs","toursWithPlaces","Promise","all","map","tourId","tourDocRef","tourSnap","tourData","id","placesSnap","places","docs","filtered","filter","t","handleRemoveTour","idToRemove","userRef","log","className","children","length","tour","index","onRemove","src","alt"],"sources":["C:/Users/dacko/my-react-app/src/pages/userpage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CardWithMap from \"../components/CardWithMap\";\r\n\r\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js\";\r\nimport { getFirestore, collection, getDocs, updateDoc, arrayRemove ,doc, getDoc } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js\";\r\nimport { getAuth, onAuthStateChanged } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB1JR1fYBr3xUDCEJSE67FF8D2gRlSdPcY\",\r\n    authDomain: \"hot-tours-39775.firebaseapp.com\",\r\n    projectId: \"hot-tours-39775\",\r\n    storageBucket: \"hot-tours-39775.firebasestorage.app\",\r\n    messagingSenderId: \"299242912883\",\r\n    appId: \"1:299242912883:web:e2f4207f55e72b165f7e06\",\r\n    measurementId: \"G-TKWTBWYCZZ\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nconst UserPage = () => {\r\n    const [orderedTours, setOrderedTours] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [userName, setUserName] = useState(\"\"); // <-- новий стан для імені\r\n  \r\n    // Відстеження входу користувача\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n            if (firebaseUser) {\r\n                setUser(firebaseUser);\r\n                loadUserName(firebaseUser.email);\r\n                loadOrderedTours(firebaseUser.email);\r\n            } else {\r\n                setUser(null);\r\n                setUserName(\"\");\r\n                setOrderedTours([]);\r\n            }\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    // Завантажити ім’я користувача з Firestore\r\n    const loadUserName = async (userEmail) => {\r\n        try {\r\n            const userDocRef = doc(db, \"users\", userEmail);\r\n            const userDocSnap = await getDoc(userDocRef);\r\n            if (userDocSnap.exists()) {\r\n                const userData = userDocSnap.data();\r\n            if (userData.name) {\r\n                setUserName(userData.name);\r\n            }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Помилка завантаження імені користувача:\", error);\r\n        }\r\n    };\r\n\r\n    // Завантажити замовлені тури\r\n    const loadOrderedTours = async (userEmail) => {\r\n        try {\r\n          const userDocRef = doc(db, \"users\", userEmail);\r\n          const userDocSnap = await getDoc(userDocRef);\r\n      \r\n          if (!userDocSnap.exists()) {\r\n            console.error(\"Користувача не знайдено\");\r\n            return;\r\n          }\r\n      \r\n          const userData = userDocSnap.data();\r\n          const orderedIDs = userData.orderedTours || [];\r\n      \r\n          // Отримати всі замовлені тури\r\n          const toursWithPlaces = await Promise.all(\r\n            orderedIDs.map(async (tourId) => {\r\n              const tourDocRef = doc(db, \"tours\", tourId);\r\n              const tourSnap = await getDoc(tourDocRef);\r\n      \r\n              if (!tourSnap.exists()) return null;\r\n      \r\n              const tourData = { id: tourSnap.id, ...tourSnap.data() };\r\n      \r\n              // Завантаження підколекції places\r\n              const placesSnap = await getDocs(collection(db, \"tours\", tourId, \"places\"));\r\n              tourData.places = placesSnap.docs.map((doc) => doc.data());\r\n      \r\n              return tourData;\r\n            })\r\n          );\r\n      \r\n          // Фільтруємо null (якщо якийсь тур не існує)\r\n          const filtered = toursWithPlaces.filter((t) => t !== null);\r\n          setOrderedTours(filtered);\r\n        } catch (error) {\r\n          console.error(\"Помилка завантаження замовлених турів:\", error);\r\n        }\r\n      };\r\n\r\n    // Видалення туру з замовлень\r\n    const handleRemoveTour = async (idToRemove) => {\r\n        if (!user) return;\r\n    \r\n        try {\r\n            const userRef = doc(db, \"users\", user.email);\r\n    \r\n            // Видалити tourId з масиву orderedTours\r\n            await updateDoc(userRef, {\r\n                orderedTours: arrayRemove(idToRemove)\r\n            });\r\n    \r\n            // Повторно завантажити оновлені тури\r\n            loadOrderedTours(user.email);\r\n            console.log(\"Натиснуто на видалення туру з id:\", idToRemove);\r\n        } catch (error) {\r\n            console.error(\"Помилка видалення туру:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-page\">\r\n            <h1>{userName ? `${userName}, ось ваші тури` : \"Ваші тури\"}</h1>\r\n    \r\n            {orderedTours.length > 0 ? (\r\n            orderedTours.map((tour, index) => (\r\n                <CardWithMap key={index} tour={tour} index={index} onRemove={handleRemoveTour} user={user}/>\r\n            ))\r\n            ) : (\r\n            <div className=\"own-tour-div\">\r\n                <img src=\"img/noTours.png\" alt=\"немає нічого\" className=\"no-tour-img\" />\r\n                <h2>Ви ще не додали жодного туру!</h2>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}