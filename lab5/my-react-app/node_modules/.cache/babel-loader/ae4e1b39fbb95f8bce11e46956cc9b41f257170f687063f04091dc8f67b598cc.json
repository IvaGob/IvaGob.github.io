{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dacko\\\\my-react-app\\\\src\\\\pages\\\\userpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CardWithMap from \"../components/CardWithMap\";\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js\";\nimport { getFirestore, collection, getDocs, updateDoc, arrayRemove, doc, getDoc } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js\";\nimport { getAuth, onAuthStateChanged } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js\";\nimport SERVER_URL from \"../components/ServerUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB1JR1fYBr3xUDCEJSE67FF8D2gRlSdPcY\",\n  authDomain: \"hot-tours-39775.firebaseapp.com\",\n  projectId: \"hot-tours-39775\",\n  storageBucket: \"hot-tours-39775.firebasestorage.app\",\n  messagingSenderId: \"299242912883\",\n  appId: \"1:299242912883:web:e2f4207f55e72b165f7e06\",\n  measurementId: \"G-TKWTBWYCZZ\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst UserPage = () => {\n  _s();\n  const [orderedTours, setOrderedTours] = useState([]);\n  const [user, setUser] = useState(null);\n  const [userName, setUserName] = useState(\"\"); // <-- новий стан для імені\n\n  // Відстеження входу користувача\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, firebaseUser => {\n      if (firebaseUser) {\n        setUser(firebaseUser);\n        loadUserName(firebaseUser.email);\n        loadOrderedTours(firebaseUser.email);\n      } else {\n        setUser(null);\n        setUserName(\"\");\n        setOrderedTours([]);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Завантажити ім’я користувача з Firestore\n  const loadUserName = async userEmail => {\n    try {\n      const userDocRef = doc(db, \"users\", userEmail);\n      const userDocSnap = await getDoc(userDocRef);\n      if (userDocSnap.exists()) {\n        const userData = userDocSnap.data();\n        if (userData.name) {\n          setUserName(userData.name);\n        }\n      }\n    } catch (error) {\n      console.error(\"Помилка завантаження імені користувача:\", error);\n    }\n  };\n\n  // Завантажити замовлені тури\n  const loadOrderedTours = async userEmail => {\n    try {\n      const userDocRef = doc(db, \"users\", userEmail);\n      const userDocSnap = await getDoc(userDocRef);\n      if (!userDocSnap.exists()) {\n        console.error(\"Користувача не знайдено\");\n        return;\n      }\n      const userData = userDocSnap.data();\n      const orderedIDs = userData.orderedTours || [];\n\n      // Отримати всі замовлені тури\n      const toursWithPlaces = await Promise.all(orderedIDs.map(async tourId => {\n        const tourDocRef = doc(db, \"tours\", tourId);\n        const tourSnap = await getDoc(tourDocRef);\n        if (!tourSnap.exists()) return null;\n        const tourData = {\n          id: tourSnap.id,\n          ...tourSnap.data()\n        };\n\n        // Завантаження підколекції places\n        const placesSnap = await getDocs(collection(db, \"tours\", tourId, \"places\"));\n        tourData.places = placesSnap.docs.map(doc => doc.data());\n        return tourData;\n      }));\n\n      // Фільтруємо null (якщо якийсь тур не існує)\n      const filtered = toursWithPlaces.filter(t => t !== null);\n      setOrderedTours(filtered);\n    } catch (error) {\n      console.error(\"Помилка завантаження замовлених турів:\", error);\n    }\n  };\n\n  // Видалення туру з замовлень\n  const handleRemoveTour = async idToRemove => {\n    if (!user) return;\n    try {\n      const response = await fetch(`${SERVER_URL}/api/removeTour`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: user.email,\n          tourId: idToRemove\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        loadOrderedTours(user.email);\n      } else {\n        console.error(\"Помилка видалення туру:\", data.error);\n      }\n    } catch (error) {\n      console.error(\"Помилка при запиті до сервера (removeTour):\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userName ? `${userName}, ось ваші тури` : \"Ваші тури\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), orderedTours.length > 0 ? orderedTours.map((tour, index) => /*#__PURE__*/_jsxDEV(CardWithMap, {\n      tour: tour,\n      index: index,\n      onRemove: handleRemoveTour,\n      user: user\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"own-tour-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"img/noTours.png\",\n        alt: \"\\u043D\\u0435\\u043C\\u0430\\u0454 \\u043D\\u0456\\u0447\\u043E\\u0433\\u043E\",\n        className: \"no-tour-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0438 \\u0449\\u0435 \\u043D\\u0435 \\u0434\\u043E\\u0434\\u0430\\u043B\\u0438 \\u0436\\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u0442\\u0443\\u0440\\u0443!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPage, \"5JuqEib3VxMUxqZY07VBUuRUdGs=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","CardWithMap","initializeApp","getFirestore","collection","getDocs","updateDoc","arrayRemove","doc","getDoc","getAuth","onAuthStateChanged","SERVER_URL","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","auth","UserPage","_s","orderedTours","setOrderedTours","user","setUser","userName","setUserName","unsubscribe","firebaseUser","loadUserName","email","loadOrderedTours","userEmail","userDocRef","userDocSnap","exists","userData","data","name","error","console","orderedIDs","toursWithPlaces","Promise","all","map","tourId","tourDocRef","tourSnap","tourData","id","placesSnap","places","docs","filtered","filter","t","handleRemoveTour","idToRemove","response","fetch","method","headers","body","JSON","stringify","json","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","tour","index","onRemove","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/dacko/my-react-app/src/pages/userpage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CardWithMap from \"../components/CardWithMap\";\r\n\r\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js\";\r\nimport { getFirestore, collection, getDocs, updateDoc, arrayRemove ,doc, getDoc } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js\";\r\nimport { getAuth, onAuthStateChanged } from \"https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js\";\r\nimport SERVER_URL from \"../components/ServerUrl\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB1JR1fYBr3xUDCEJSE67FF8D2gRlSdPcY\",\r\n    authDomain: \"hot-tours-39775.firebaseapp.com\",\r\n    projectId: \"hot-tours-39775\",\r\n    storageBucket: \"hot-tours-39775.firebasestorage.app\",\r\n    messagingSenderId: \"299242912883\",\r\n    appId: \"1:299242912883:web:e2f4207f55e72b165f7e06\",\r\n    measurementId: \"G-TKWTBWYCZZ\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nconst UserPage = () => {\r\n    const [orderedTours, setOrderedTours] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [userName, setUserName] = useState(\"\"); // <-- новий стан для імені\r\n  \r\n    // Відстеження входу користувача\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n            if (firebaseUser) {\r\n                setUser(firebaseUser);\r\n                loadUserName(firebaseUser.email);\r\n                loadOrderedTours(firebaseUser.email);\r\n            } else {\r\n                setUser(null);\r\n                setUserName(\"\");\r\n                setOrderedTours([]);\r\n            }\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    // Завантажити ім’я користувача з Firestore\r\n    const loadUserName = async (userEmail) => {\r\n        try {\r\n            const userDocRef = doc(db, \"users\", userEmail);\r\n            const userDocSnap = await getDoc(userDocRef);\r\n            if (userDocSnap.exists()) {\r\n                const userData = userDocSnap.data();\r\n            if (userData.name) {\r\n                setUserName(userData.name);\r\n            }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Помилка завантаження імені користувача:\", error);\r\n        }\r\n    };\r\n\r\n    // Завантажити замовлені тури\r\n    const loadOrderedTours = async (userEmail) => {\r\n        try {\r\n          const userDocRef = doc(db, \"users\", userEmail);\r\n          const userDocSnap = await getDoc(userDocRef);\r\n      \r\n          if (!userDocSnap.exists()) {\r\n            console.error(\"Користувача не знайдено\");\r\n            return;\r\n          }\r\n      \r\n          const userData = userDocSnap.data();\r\n          const orderedIDs = userData.orderedTours || [];\r\n      \r\n          // Отримати всі замовлені тури\r\n          const toursWithPlaces = await Promise.all(\r\n            orderedIDs.map(async (tourId) => {\r\n              const tourDocRef = doc(db, \"tours\", tourId);\r\n              const tourSnap = await getDoc(tourDocRef);\r\n      \r\n              if (!tourSnap.exists()) return null;\r\n      \r\n              const tourData = { id: tourSnap.id, ...tourSnap.data() };\r\n      \r\n              // Завантаження підколекції places\r\n              const placesSnap = await getDocs(collection(db, \"tours\", tourId, \"places\"));\r\n              tourData.places = placesSnap.docs.map((doc) => doc.data());\r\n      \r\n              return tourData;\r\n            })\r\n          );\r\n      \r\n          // Фільтруємо null (якщо якийсь тур не існує)\r\n          const filtered = toursWithPlaces.filter((t) => t !== null);\r\n          setOrderedTours(filtered);\r\n        } catch (error) {\r\n          console.error(\"Помилка завантаження замовлених турів:\", error);\r\n        }\r\n      };\r\n\r\n    // Видалення туру з замовлень\r\n    const handleRemoveTour = async (idToRemove) => {\r\n        if (!user) return;\r\n\r\n        try {\r\n            const response = await fetch(`${SERVER_URL}/api/removeTour`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ email: user.email, tourId: idToRemove })\r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                loadOrderedTours(user.email);\r\n            } else {\r\n                console.error(\"Помилка видалення туру:\", data.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Помилка при запиті до сервера (removeTour):\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-page\">\r\n            <h1>{userName ? `${userName}, ось ваші тури` : \"Ваші тури\"}</h1>\r\n    \r\n            {orderedTours.length > 0 ? (\r\n            orderedTours.map((tour, index) => (\r\n                <CardWithMap key={index} tour={tour} index={index} onRemove={handleRemoveTour} user={user}/>\r\n            ))\r\n            ) : (\r\n            <div className=\"own-tour-div\">\r\n                <img src=\"img/noTours.png\" alt=\"немає нічого\" className=\"no-tour-img\" />\r\n                <h2>Ви ще не додали жодного туру!</h2>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}